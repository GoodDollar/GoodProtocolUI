name: '[dev-mukul] Deploy Release'

on:
    push:
        branches:
            - dev-mukul
    workflow_dispatch:

jobs:
    deploy:
        name: Deploy Release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set env BRANCH
              run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV

            - name: Set network env(s)
              run: |
                  if [[ $BRANCH == 'production' ]]; then
                      echo "NETWORK=production" >> $GITHUB_ENV
                      echo "CLOUDFLARE_RECORD_NAME=_dnslink.fi" >> "$GITHUB_ENV"
                      echo "SUBDOMAIN=fi" >> "$GITHUB_ENV"
                  else
                      echo "CLOUDFLARE_RECORD_NAME=_dnslink.fi-qa" >> "$GITHUB_ENV"
                      echo "SUBDOMAIN=fi-qa" >> "$GITHUB_ENV"
                  fi
            - name: Load node v14
              uses: actions/setup-node@v1
              with:
                  node-version: '14'

            - name: Install dependencies
              uses: bahmutov/npm-install@v1

            - name: Build app
              run: yarn build

            # Pinning
            - name: Pin via web3 storage (Upload to web3 storage)
              id: web3
              uses: web3-storage/add-to-web3@v1
              with:
                  web3_token: ${{ secrets.WEB3_STORAGE }}
                  path_to_add: './build'

            - name: Display pin address
              run: |
                  echo published as ${{ steps.web3.outputs.url }}
                  echo cid ${{ steps.web3.outputs.cid }}
            # DNS
            # - name: Update DNS with new IPFS hash
            #   env:
            #       CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
            #       RECORD_DOMAIN: 'gooddollar.org'
            #       RECORD_NAME: ${{ env.CLOUDFLARE_RECORD_NAME }}
            #       CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
            #   id: dnslink
            #   uses: textileio/cloudflare-update-dnslink@master
            #   with:
            #       cid: ${{ steps.web3.outputs.cid }}
