name: Deploy

on:
    push:
        branches:
            # - main
            # - production
            # - staging
            - dev-mukul
    # allow manual run
    workflow_dispatch:

jobs:
    bump_version:
        name: Bump Version
        runs-on: ubuntu-latest
        outputs:
            new_tag: ${{ steps.github_tag_action.outputs.new_tag }}
            changelog: ${{ steps.github_tag_action.outputs.changelog }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: '0'
            - name: Bump version and push tag
              id: github_tag_action
              uses: mathieudutour/github-tag-action@v5.5
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  # release_branches: production, staging
                  release_branches: .*
                  # pre_release_branches: main
                  # release_branches: release.*,master
            # Bumps the version in package.json and pushes it back to the repo
            # - name: 'Automated Version Bump'
            #   uses: 'phips28/gh-action-bump-version@master'
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   with:
            #       target-branch: 'main'
            #       default: 'patch'

    deploy:
        name: Deploy Release
        runs-on: ubuntu-latest
        needs: bump_version
        if: ${{ needs.bump_version.outputs.new_tag != null }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set network env(s)
              run: |
                  echo "RECORD_NAME=_dnslink.dev" >> $GITHUB_ENV
                  echo "subdomain=fi-qa" >> $GITHUB_ENV
                  echo "deploy_addr=${{ env.subdomain }}.${{ secrets.CLOUDFLARE_DOMAIN }}" >> $GITHUB_ENV

            - name: Load node v14
              uses: actions/setup-node@v1
              with:
                  node-version: '14'

            - name: Install dependencies
              uses: bahmutov/npm-install@v1
              with:
                  useYarn: true

            - name: Build app
              run: yarn build

            # Pinning
            # Result: CIDv0 hash
            - name: Pin via web3 storage (Upload to web3 storage)
              id: web3
              uses: web3-storage/add-to-web3@v1
              with:
                # web3_token: ${{ secrets.WEB3_STORAGE_TOKEN }}
                web3_token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweEU2RDQ4YjBiNjcyYTE3OUMzM2EwYjI3OTI1ZEI3NUNkMDc5OTNhRDEiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2MzQ2OTU0Mzg0NTcsIm5hbWUiOiJ0ZXN0IGdkIn0.DYLTIBAo500MqBEDp9pDYCJoOeOriTLsUwSvYu65XWM'
                path_to_add: './build'

            - name: Display pin address
              run: |
                  echo published as ${{ steps.web3.outputs.url }}
                  echo cid ${{ steps.web3.outputs.cid }}

            # DNS
            - name: Update DNS with new IPFS hash
              env:
                  CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
                  CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
                  RECORD_DOMAIN: ${{ secrets.CLOUDFLARE_DOMAIN }}
                  RECORD_NAME: ${{ env.RECORD_NAME }}
              uses: textileio/cloudflare-update-dnslink@master
              with:
                  cid: ${{ steps.web3.outputs.cid }}
          
            - name: Show deployment address
              run: echo ${{ needs.bump_version.outputs.new_tag }} Deployed at ${{ env.deploy_addr }}

            # GitHub release with links
            # - name: Create GitHub Release with tag ${{ needs.bump_version.outputs.new_tag }}
            #   if: ${{ contains(github.ref,'production') }}
            #   id: create_release
            #   uses: ncipollo/release-action@v1.8.4
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   with:
            #       tag: ${{ needs.bump_version.outputs.new_tag }}
            #       name: ${{ needs.bump_version.outputs.new_tag }}
            #       token: ${{ secrets.GITHUB_TOKEN }}
            #       body: |
            #           IPFS hash of the deployment:
            #           - CIDv0: `${{ steps.upload.outputs.hash }}`
            #           The latest release is always accessible via our alias to the Cloudflare IPFS gateway at [${{ env.deploy_addr }}](https://${{ env.deploy_addr }}/).
            #           IPFS gateways:
            #           - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.dweb.link/
            #           - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.cf-ipfs.com/
            #           - https://gateway.pinata.cloud/ipfs/${{ steps.upload.outputs.hash }}/
            #           - https://cloudflare-ipfs.com/ipfs/${{ steps.upload.outputs.hash }}/
            #           - https://ipfs.io/ipfs/${{ steps.upload.outputs.hash }}/
            #           ${{ needs.bump_version.outputs.changelog }}
